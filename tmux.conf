# ==============================================================================
# Variables:

is_macos='[ `uname` = "Darwin" ]'
is_linux='[ `uname` = "Linux" ]'
multiple_panes='test `tmux list-panes -t #S:#I | wc -l` -gt 2'


# ==============================================================================
# Miscellaneous options:

# Set $TERM
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Increase scrollback buffer size
set -g history-limit 50000

# Increase pane numbers visibility timeout (C-b i)
set-window-option -g display-panes-time 10000

# Terminal (GUI) window titling:
set-option -g set-titles on
set-option -g set-titles-string '#S:#W [#I:#P] @ #H'
set-window-option -g automatic-rename on

# Disable automatic rename of the tmux windows
set-window-option -g allow-rename off

# Change refresh window numbering when window is deleted
set -g renumber-windows on

# Configure window notifications
set-window-option -g monitor-activity on
set-window-option -g monitor-bell on
set-window-option -g monitor-silence 0
set-option -g visual-activity off
set-option -g visual-bell off

# Mouse support (enabling it will make text selection less convenient)
set -g mouse off


# ==============================================================================
# Key bindings:

# Use emacs-style keybindings in prompt and vi-style elsewhere
set -g mode-keys vi
set -g status-keys emacs

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -g escape-time 0
set -g repeat-time 250

unbind %
unbind ,
unbind .
unbind p
unbind &

bind -r b send-prefix

# Session:
bind r source-file ~/.tmux.conf\; display-message " âœ± ~/.tmux.conf is reloaded"
bind R refresh-client
bind q confirm-before kill-session
bind Q confirm-before kill-server
bind C-n command-prompt 'rename-session %%'
bind C-s choose-tree -ZN

# Panes:
bind i if-shell $multiple_panes { display-panes } { select-pane -t :.+ }
bind C-b if-shell $multiple_panes { last-pane } { last-window }
# bind C-b last-pane
bind n command-prompt 'rename-window %%'
bind m command-prompt 'move-pane -t %%' # reverses {prefix}-!
bind x confirm-before kill-pane
bind -r o select-pane -t :.+    # select next pane
bind -r j select-pane -D        # select downward pane
bind -r k select-pane -U        # select upward pane
bind -r h select-pane -L        # select left pane
bind -r l select-pane -R        # select right pane
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-h resize-pane -L
bind -r C-l resize-pane -R

# Windows:
bind c new-window               # new window at the end
bind C new-window -a            # new window right after this one
bind s split-window -v          # split vertically and switch to new window
bind S split-window -vd         # split vertically and stay in current window
bind v split-window -h          # split horizontally and switch to new window
bind V split-window -hd         # split horizontally and stay in current window
bind C-g last-window
bind -r , previous-window
bind -r . next-window
bind -r < swap-window -d -t :-
bind -r > swap-window -d -t :+
bind M command-prompt 'move-window -t %%' # enter session:N to move window to different client
bind X confirm-before kill-window

# Copy/paste:
bind [ copy-mode
bind ] paste-buffer
bind Escape copy-mode
bind I choose-buffer
bind -Tcopy-mode-vi [ send -X page-up
bind -Tcopy-mode-vi ] send -X page-down
bind -Tcopy-mode-vi K send -X page-up
bind -Tcopy-mode-vi J send -X page-down
bind -Tcopy-mode-vi v send -X begin-selection
if "$is_macos" 'bind -Tcopy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
if "$is_macos" 'bind -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
if "$is_linux" 'bind -Tcopy-mode-vi y send -X copy-pipe-and-cancel "xclip -i -selection clipboard"'
if "$is_linux" 'bind -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -i -selection clipboard"'

# Menus:
bind -Tchoice-mode-vi h send-keys -X tree-collapse
bind -Tchoice-mode-vi l send-keys -X tree-expand

# External commands:
bind / command-prompt "new-window -n man:%1 'exec man -P \"bat --language man --plain --paging always\" %1'"
bind R command-prompt "new-window -n ssh:%1 'exec ssh %1'"
bind p command-prompt "new-window -n app:%1 'exec %1'"


# ==============================================================================
# Status bar and colors:

# Generic status settings
set -g status on
set -g status-position top
set -g status-justify left      # left, centre, right
set -g status-interval 2        # update interval (seconds)

# Generic color settings
set -g status-bg "#3a3a3a"
set -g status-fg "#fcfcfc"
set -g clock-mode-colour "#7945b5"
set -g message-style "fg=#3a3a3a,bg=#fcfcfc"

# Left status (session and window and pane info)
set -g status-left-length 20
set -g status-left '#[fg=#3f3f3f,bg=#e59600,bold] #S [#I:#P] #[default]'

# Right status (date, time, user and host info)
set -g status-right-length 50
if "$is_linux" "set -g status-right '#[fg=#dcdcdc,bg=#7945b5,bold] %d/%m #[fg=#1f1f1f,bg=#b58e45,bold] %H:%M #[fg=#3f3f3f,bg=#69b545,bold] #(whoami)@#H '"
if "$is_macos" "set -g status-right '#[fg=#dcdcdc,bg=#7945b5,bold] %d/%m #[fg=#1f1f1f,bg=#b58e45,bold] %H:%M #[fg=#1f1f1f,bg=#b545b5,bold] #(whoami)@#H '"

# Window list
set-window-option -g window-status-format ' #I#[fg=#a0a0a0]:#[fg=#a1a1a1]#W#[fg=#b5b5b5]#F '
set-window-option -g window-status-current-format ' #I#[fg=#cfcfcf]:#[fg=#fcfcfc]#W#[fg=#fcfcfc]#F '
